[tool.poetry]
name = "extract-openapi-scheme"
version = "0.1.0"
description = ""
authors = ["Alexander Mescheryakov <avm@sh-inc.ru>"]
readme = "README.md"
packages = [
    { include = "hooks", from = "." },
]

[tool.poetry.dependencies]
python = "^3.10"
django = "^5.0.6"
fastapi = "^0.111.0"


[tool.poetry.group.dev.dependencies]
fastapi = "^0.111.0"
django = "^5.0.6"
djangorestframework = "^3.15.2"
drf-spectacular = "^0.27.2"
pytest-mock = "^3.14.0"
pytest = "^8.2.2"
pre-commit = "^3.7.1"

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"

[tool.poetry.scripts]
extract-openapi-schema = "hooks.cli_command:main"

# ==== pytest ====
[tool.pytest.ini_options]
minversion = "6.0"
pythonpath = "./src"
python_files = [
    "tests.py",
    "test_*.py",
]
markers = [
]


# ==== Coverage ====
[tool.coverage.run]
include = ["src/**"]


# ==== mypy ====
[tool.mypy]
python_version = "3.12"
check_untyped_defs = true
ignore_missing_imports = true
warn_unused_ignores = true
warn_redundant_casts = true
warn_unused_configs = true



[tool.ruff]
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
]
line-length = 120
indent-width = 4
target-version = "py310"

[tool.ruff.lint]
select = [
    "F",
    "E",
    "W",
    "C90",
    "I",
    "N",
    "UP",
    "YTT",
    "ASYNC",
    "S",
    "BLE",
    "FBT",
    "B",
    "A",
    "COM",
    "C4",
    "DTZ",
    "T10",
    "DJ",
    "EM",
    "EXE",
    "FA",
    'ISC',
    "ICN",
    "G",
    'INP',
    'PIE',
    "T20",
    'PYI',
    'PT',
    "Q",
    "RSE",
    "RET",
    "SLF",
    "SLOT",
    "SIM",
    "TID",
    "TCH",
    "INT",
    # "ARG", # Unused function argument
    "PTH",
    "ERA",
    "PD",
    "PGH",
    "PL",
    "TRY",
    "FLY",
    # "NPY",
    # "AIR",
    "PERF",
    # "FURB",
    # "LOG",
    "RUF"
]
ignore = [
    "PGH004", # Use specific rule codes when using `noqa`
    "RET506", # Unnecessary `elif` after `raise` statement
    "COM812", # Missing trailing comma
    "ISC001"  # Use `is` or `is not` to compare with `None`


]
# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []
# The fixes in extend-unsafe-fixes will require
# provide the `--unsafe-fixes` flag when fixing.
extend-unsafe-fixes = [
    #    "UP038"
]
# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
quote-style = "double"
indent-style = "space"
skip-magic-trailing-comma = false
line-ending = "auto"

[tool.ruff.lint.isort]
force-single-line = false
